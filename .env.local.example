# YouTube API Configuration
# Choose ONE of the following authentication methods:

# METHOD 1 (RECOMMENDED): YouTube Data API Key
# This is simpler and more reliable for public YouTube data
# Get your API key from: https://console.cloud.google.com/apis/credentials
# Enable YouTube Data API v3 in your Google Cloud Console
YOUTUBE_API_KEY=your_youtube_api_key_here

# METHOD 2: Service Account (Alternative approach)
# Use this if you need more advanced authentication features
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing one
# 3. Enable YouTube Data API v3
# 4. Go to "Credentials" -> "Create Credentials" -> "Service Account"
# 5. Download the JSON file

# Option 2A: Copy the entire JSON content from your downloaded service account file:
# GOOGLE_SERVICE_ACCOUNT_JSON={"type":"service_account","project_id":"your-project-id","private_key_id":"abc123","private_key":"-----BEGIN PRIVATE KEY-----\nYourPrivateKeyHere\n-----END PRIVATE KEY-----\n","client_email":"your-service-account@your-project.iam.gserviceaccount.com","client_id":"123456789","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token"}

# Option 2B: Base64 encoded service account (use if Option 2A causes issues in production):
# Run: npm run prepare-production your-service-account.json
# GOOGLE_SERVICE_ACCOUNT_BASE64=base64_encoded_json_here

# ALTERNATIVE: Use file path (local development only, not recommended for production)
# GOOGLE_SERVICE_ACCOUNT_PATH=./path/to/your/service-account-key.json

# Optional: Specify project ID explicitly (usually auto-detected from service account)
# GOOGLE_CLOUD_PROJECT_ID=your-project-id

# RECOMMENDATION: Use YOUTUBE_API_KEY for simplicity and reliability
